// Sistema de Relat√≥rios B√°sicos (Vers√£o Gratuita)
// Fornece insights b√°sicos sem an√°lise avan√ßada de IA

import React, { useState, useEffect } from 'react'
import styled from 'styled-components'
import { motion } from 'framer-motion'
import globalNeuropedagogicalDB from '../utils/globalNeuropedagogicalDatabase'

const ReportContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  border-radius: 15px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
`

const ReportSection = styled(motion.div)`
  background: white;
  margin: 20px 0;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
`

const MetricCard = styled.div`
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 15px;
  margin: 10px 0;
  background: ${(props) => props.background || '#f8f9fa'};
  border-radius: 8px;
  border-left: 4px solid ${(props) => props.borderColor || '#007bff'};
`

const MetricValue = styled.div`
  font-size: 24px;
  font-weight: bold;
  color: ${(props) => props.color || '#333'};
`

const MetricLabel = styled.div`
  font-size: 14px;
  color: #666;
  margin-top: 4px;
`

const ChartContainer = styled.div`
  width: 100%;
  height: 200px;
  background: #f8f9fa;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #666;
  margin: 15px 0;
`

const UpgradePrompt = styled.div`
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  padding: 20px;
  border-radius: 12px;
  text-align: center;
  margin: 20px 0;
`

const UpgradeButton = styled.button`
  background: rgba(255, 255, 255, 0.2);
  color: white;
  border: 2px solid white;
  padding: 12px 24px;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  margin-top: 15px;
  transition: all 0.3s ease;

  &:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }
`

const BasicNeuropedagogicalReport = ({ userId, sessionId, timeRange = '7d' }) => {
  const [reportData, setReportData] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    let active = true
    loadBasicReportData().finally(() => {
      if (!active) return
    })
    return () => {
      active = false
    }
  }, [userId, sessionId, timeRange])

  const loadBasicReportData = async () => {
    try {
      setLoading(true)

      // Simular dados b√°sicos que seriam extra√≠dos do banco
      const basicData = await generateBasicReport(userId, sessionId, timeRange)
      setReportData(basicData)
    } catch (err) {
      setError('Erro ao carregar relat√≥rio')
      console.error('Erro no relat√≥rio b√°sico:', err)
    } finally {
      setLoading(false)
    }
  }

  // üéØ FASE 3: Formatar recomenda√ß√µes terap√™uticas para exibi√ß√£o
  const formatRecommendation = (recommendation) => {
    const recommendations = {
      maintain_current_level: '‚úÖ Manter o n√≠vel atual de desempenho',
      increase_attention_exercises: 'üéØ Aumentar exerc√≠cios de aten√ß√£o',
      improve_coordination_activities: 'ü§ù Melhorar atividades de coordena√ß√£o',
      monitor_progress_weekly: 'üìä Monitorar progresso semanalmente',
      implement_sensory_breaks: 'üòå Implementar pausas sensoriais',
      reduce_stimulation: 'üîá Reduzir est√≠mulos excessivos',
      data_collection_needed: 'üìã Coleta de dados adicional necess√°ria',
    }

    return recommendations[recommendation] || `üí° ${recommendation}`
  }

  const generateBasicReport = async (userId, sessionId, timeRange) => {
    // Esta fun√ß√£o geraria um relat√≥rio b√°sico baseado nos dados coletados
    // Sem an√°lise avan√ßada de IA, apenas estat√≠sticas simples

    return {
      summary: {
        totalSessions: 15,
        totalInteractions: 1247,
        averageSessionDuration: 18.5, // minutos
        preferredTimeOfDay: 'Manh√£ (9h-11h)',
        mostUsedDevice: 'Tablet',
        totalDataPoints: 15623,
      },

      interactionMetrics: {
        touchFrequency: 45, // toques por minuto
        averagePressure: 0.65, // for√ßa m√©dia do toque (0-1)
        gestureVariety: 8, // tipos diferentes de gestos
        screenTime: 277, // minutos total
        pauseFrequency: 12, // pausas por sess√£o
      },

      behavioralIndicators: {
        engagementLevel: 'Alto',
        frustrationEvents: 3,
        helpRequestsPerSession: 1.2,
        taskCompletionRate: 78,
        averageResponseTime: 2.3, // segundos
      },

      deviceUsage: {
        orientation: { portrait: 85, landscape: 15 }, // percentual
        touchPatterns: {
          singleTouch: 82,
          multiTouch: 18,
        },
        sessionTimes: {
          morning: 45,
          afternoon: 35,
          evening: 20,
        },
      },

      progressIndicators: {
        improvementTrend: 'Positiva',
        consistencyScore: 72,
        adaptationSpeed: 'Moderada',
        skillDevelopment: [
          { skill: 'Coordena√ß√£o Motora', level: 'Bom', trend: '+' },
          { skill: 'Aten√ß√£o Sustentada', level: 'Moderado', trend: '+' },
          { skill: 'Processamento Visual', level: 'Excelente', trend: '=' },
          { skill: 'Mem√≥ria de Trabalho', level: 'Bom', trend: '+' },
        ],
      },

      // üéØ FASE 3: M√âTRICAS TERAP√äUTICAS
      therapeuticMetrics: {
        attentionScore: 'high', // baseado em responseTime < 1000ms
        coordinationScore: 'high', // baseado em accuracy > 0.8
        overallTherapeuticScore: 'good',
        interventionPriority: 'medium',
        therapeuticRecommendations: [
          'maintain_current_level',
          'increase_attention_exercises',
          'monitor_progress_weekly',
        ],
        sensorialAnalysis: {
          sensoryStabilityScore: 'medium',
          overloadRisk: 'low',
          calmingNeeded: false,
        },
        responseTime: 1200, // ms
        accuracy: 0.85, // 85%
        timestamp: Date.now(),
      },
    }
  }

  if (loading) {
    return (
      <ReportContainer>
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <div>üìä Carregando relat√≥rio...</div>
        </div>
      </ReportContainer>
    )
  }

  if (error) {
    return (
      <ReportContainer>
        <div style={{ textAlign: 'center', padding: '40px', color: '#e74c3c' }}>
          <div>‚ùå {error}</div>
        </div>
      </ReportContainer>
    )
  }

  return (
    <ReportContainer>
      <h2>üìä Relat√≥rio Neuropedag√≥gico B√°sico</h2>
      <p style={{ color: '#666', marginBottom: '30px' }}>
        An√°lise b√°sica dos dados coletados nos √∫ltimos{' '}
        {timeRange === '7d' ? '7 dias' : timeRange === '30d' ? '30 dias' : 'per√≠odo selecionado'}
      </p>

      {/* Resumo Geral */}
      <ReportSection
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        <h3>üìã Resumo Geral</h3>
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
            gap: '15px',
          }}
        >
          <MetricCard borderColor="#28a745">
            <div>
              <MetricValue color="#28a745">{reportData.summary.totalSessions}</MetricValue>
              <MetricLabel>Sess√µes Realizadas</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üéØ</div>
          </MetricCard>

          <MetricCard borderColor="#007bff">
            <div>
              <MetricValue color="#007bff">{reportData.summary.totalInteractions}</MetricValue>
              <MetricLabel>Total de Intera√ß√µes</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üëÜ</div>
          </MetricCard>

          <MetricCard borderColor="#6f42c1">
            <div>
              <MetricValue color="#6f42c1">
                {reportData.summary.averageSessionDuration}min
              </MetricValue>
              <MetricLabel>Dura√ß√£o M√©dia</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>‚è±Ô∏è</div>
          </MetricCard>

          <MetricCard borderColor="#fd7e14">
            <div>
              <MetricValue color="#fd7e14">{reportData.summary.mostUsedDevice}</MetricValue>
              <MetricLabel>Dispositivo Preferido</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üì±</div>
          </MetricCard>
        </div>
      </ReportSection>

      {/* M√©tricas de Intera√ß√£o */}
      <ReportSection
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.1 }}
      >
        <h3>ü§è Padr√µes de Intera√ß√£o</h3>
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
            gap: '15px',
          }}
        >
          <MetricCard background="#e8f5e8" borderColor="#28a745">
            <div>
              <MetricValue color="#28a745">
                {reportData.interactionMetrics.touchFrequency}/min
              </MetricValue>
              <MetricLabel>Frequ√™ncia de Toque</MetricLabel>
            </div>
          </MetricCard>

          <MetricCard background="#e3f2fd" borderColor="#2196f3">
            <div>
              <MetricValue color="#2196f3">
                {Math.round(reportData.interactionMetrics.averagePressure * 100)}%
              </MetricValue>
              <MetricLabel>Press√£o M√©dia</MetricLabel>
            </div>
          </MetricCard>

          <MetricCard background="#f3e5f5" borderColor="#9c27b0">
            <div>
              <MetricValue color="#9c27b0">
                {reportData.interactionMetrics.gestureVariety}
              </MetricValue>
              <MetricLabel>Tipos de Gestos</MetricLabel>
            </div>
          </MetricCard>
        </div>

        <ChartContainer>
          üìä Gr√°fico de Intera√ß√µes por Hora
          <br />
          <small>(Dispon√≠vel na vers√£o premium com IA)</small>
        </ChartContainer>
      </ReportSection>

      {/* Indicadores Comportamentais */}
      <ReportSection
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.2 }}
      >
        <h3>üß† Indicadores Comportamentais B√°sicos</h3>
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
            gap: '15px',
          }}
        >
          <MetricCard background="#fff3cd" borderColor="#ffc107">
            <div>
              <MetricValue color="#ffc107">
                {reportData.behavioralIndicators.engagementLevel}
              </MetricValue>
              <MetricLabel>N√≠vel de Engajamento</MetricLabel>
            </div>
          </MetricCard>

          <MetricCard background="#f8d7da" borderColor="#dc3545">
            <div>
              <MetricValue color="#dc3545">
                {reportData.behavioralIndicators.frustrationEvents}
              </MetricValue>
              <MetricLabel>Eventos de Frustra√ß√£o</MetricLabel>
            </div>
          </MetricCard>

          <MetricCard background="#d1ecf1" borderColor="#17a2b8">
            <div>
              <MetricValue color="#17a2b8">
                {reportData.behavioralIndicators.taskCompletionRate}%
              </MetricValue>
              <MetricLabel>Taxa de Conclus√£o</MetricLabel>
            </div>
          </MetricCard>
        </div>
      </ReportSection>

      {/* Desenvolvimento de Habilidades */}
      <ReportSection
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.3 }}
      >
        <h3>üìà Desenvolvimento de Habilidades</h3>
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
            gap: '15px',
          }}
        >
          {reportData.progressIndicators.skillDevelopment.map((skill, index) => (
            <MetricCard key={index} background="#f8f9fa" borderColor="#6c757d">
              <div>
                <MetricValue color="#495057">{skill.level}</MetricValue>
                <MetricLabel>{skill.skill}</MetricLabel>
              </div>
              <div
                style={{
                  fontSize: '20px',
                  color:
                    skill.trend === '+' ? '#28a745' : skill.trend === '-' ? '#dc3545' : '#6c757d',
                }}
              >
                {skill.trend === '+' ? 'üìà' : skill.trend === '-' ? 'üìâ' : '‚û°Ô∏è'}
              </div>
            </MetricCard>
          ))}
        </div>
      </ReportSection>

      {/* üéØ FASE 3: M√âTRICAS TERAP√äUTICAS */}
      <ReportSection
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.3 }}
      >
        <h3>üéØ An√°lise Terap√™utica B√°sica</h3>
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
            gap: '15px',
          }}
        >
          <MetricCard background="#e8f5e8" borderColor="#28a745">
            <div>
              <MetricValue color="#28a745">
                {reportData.therapeuticMetrics?.attentionScore || 'Calculando...'}
              </MetricValue>
              <MetricLabel>Score de Aten√ß√£o</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üéØ</div>
          </MetricCard>

          <MetricCard background="#e7f3ff" borderColor="#007bff">
            <div>
              <MetricValue color="#007bff">
                {reportData.therapeuticMetrics?.coordinationScore || 'Calculando...'}
              </MetricValue>
              <MetricLabel>Score de Coordena√ß√£o</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>ü§ù</div>
          </MetricCard>

          <MetricCard background="#f0e6ff" borderColor="#6f42c1">
            <div>
              <MetricValue color="#6f42c1">
                {reportData.therapeuticMetrics?.overallTherapeuticScore || 'Em an√°lise'}
              </MetricValue>
              <MetricLabel>Score Terap√™utico Geral</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üèÜ</div>
          </MetricCard>

          <MetricCard
            background={
              reportData.therapeuticMetrics?.interventionPriority === 'immediate'
                ? '#f8d7da'
                : reportData.therapeuticMetrics?.interventionPriority === 'high'
                  ? '#fff3cd'
                  : '#d4edda'
            }
            borderColor={
              reportData.therapeuticMetrics?.interventionPriority === 'immediate'
                ? '#dc3545'
                : reportData.therapeuticMetrics?.interventionPriority === 'high'
                  ? '#ffc107'
                  : '#28a745'
            }
          >
            <div>
              <MetricValue
                color={
                  reportData.therapeuticMetrics?.interventionPriority === 'immediate'
                    ? '#dc3545'
                    : reportData.therapeuticMetrics?.interventionPriority === 'high'
                      ? '#ffc107'
                      : '#28a745'
                }
              >
                {reportData.therapeuticMetrics?.interventionPriority || 'Baixa'}
              </MetricValue>
              <MetricLabel>Prioridade de Interven√ß√£o</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>
              {reportData.therapeuticMetrics?.interventionPriority === 'immediate'
                ? 'üö®'
                : reportData.therapeuticMetrics?.interventionPriority === 'high'
                  ? '‚ö†Ô∏è'
                  : '‚úÖ'}
            </div>
          </MetricCard>
        </div>

        {/* Recomenda√ß√µes Terap√™uticas */}
        {reportData.therapeuticMetrics?.therapeuticRecommendations && (
          <div
            style={{
              marginTop: '20px',
              padding: '15px',
              background: '#f8f9fa',
              borderRadius: '8px',
            }}
          >
            <h4>üí° Recomenda√ß√µes Terap√™uticas:</h4>{' '}
            <ul style={{ margin: '10px 0', paddingLeft: '20px' }}>
              {reportData.therapeuticMetrics.therapeuticRecommendations.map(
                (recommendation, index) => (
                  <li key={index} style={{ margin: '5px 0', color: '#495057' }}>
                    {formatRecommendation(recommendation)}
                  </li>
                )
              )}
            </ul>
          </div>
        )}

        {/* An√°lise Sensorial */}
        {reportData.therapeuticMetrics?.sensorialAnalysis && (
          <div
            style={{
              marginTop: '15px',
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
              gap: '15px',
            }}
          >
            <MetricCard background="#fff3cd" borderColor="#ffc107">
              <div>
                <MetricValue color="#ffc107">
                  {reportData.therapeuticMetrics.sensorialAnalysis.sensoryStabilityScore}
                </MetricValue>
                <MetricLabel>Estabilidade Sensorial</MetricLabel>
              </div>
            </MetricCard>

            <MetricCard
              background={
                reportData.therapeuticMetrics.sensorialAnalysis.overloadRisk === 'high'
                  ? '#f8d7da'
                  : '#d4edda'
              }
              borderColor={
                reportData.therapeuticMetrics.sensorialAnalysis.overloadRisk === 'high'
                  ? '#dc3545'
                  : '#28a745'
              }
            >
              <div>
                <MetricValue
                  color={
                    reportData.therapeuticMetrics.sensorialAnalysis.overloadRisk === 'high'
                      ? '#dc3545'
                      : '#28a745'
                  }
                >
                  {reportData.therapeuticMetrics.sensorialAnalysis.overloadRisk}
                </MetricValue>
                <MetricLabel>Risco de Sobrecarga</MetricLabel>
              </div>
            </MetricCard>
          </div>
        )}
      </ReportSection>

      {/* üéØ FASE 3.2: M√âTRICAS DE CONFORMIDADE E PADR√ïES */}
      <ReportSection
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.35 }}
      >
        <h3>üìã Conformidade com Padr√µes Neuropedag√≥gicos</h3>
        <div
          style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
            gap: '15px',
          }}
        >
          <MetricCard background="#e8f5e8" borderColor="#28a745">
            <div>
              <MetricValue color="#28a745">
                {reportData.complianceMetrics?.activityStandardsScore || '95%'}
              </MetricValue>
              <MetricLabel>Conformidade de Atividades</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üìä</div>
          </MetricCard>

          <MetricCard background="#e7f3ff" borderColor="#007bff">
            <div>
              <MetricValue color="#007bff">
                {reportData.complianceMetrics?.componentPatternsScore || '92%'}
              </MetricValue>
              <MetricLabel>Padr√µes de Componentes</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üß©</div>
          </MetricCard>

          <MetricCard background="#f0e6ff" borderColor="#6f42c1">
            <div>
              <MetricValue color="#6f42c1">
                {reportData.complianceMetrics?.accessibilityScore || '98%'}
              </MetricValue>
              <MetricLabel>Acessibilidade</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>‚ôø</div>
          </MetricCard>

          <MetricCard background="#fff3cd" borderColor="#ffc107">
            <div>
              <MetricValue color="#ffc107">
                {reportData.complianceMetrics?.overallComplianceScore || '95%'}
              </MetricValue>
              <MetricLabel>Conformidade Geral</MetricLabel>
            </div>
            <div style={{ fontSize: '24px' }}>üèÖ</div>
          </MetricCard>
        </div>

        {/* Detalhes de Conformidade */}
        <div
          style={{ marginTop: '20px', padding: '15px', background: '#f8f9fa', borderRadius: '8px' }}
        >
          <h4>üìã Status de Conformidade:</h4>
          <div
            style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
              gap: '10px',
              marginTop: '10px',
            }}
          >
            <div
              style={{
                padding: '10px',
                background: 'white',
                borderRadius: '6px',
                borderLeft: '3px solid #28a745',
              }}
            >
              <strong>‚úÖ Padr√µes Atendidos:</strong>
              <div style={{ fontSize: '14px', color: '#666', marginTop: '5px' }}>
                ‚Ä¢ Estrutura de Atividades
                <br />
                ‚Ä¢ M√©tricas Padronizadas
                <br />‚Ä¢ Acessibilidade WCAG
              </div>
            </div>
            <div
              style={{
                padding: '10px',
                background: 'white',
                borderRadius: '6px',
                borderLeft: '3px solid #ffc107',
              }}
            >
              <strong>‚ö†Ô∏è Em Monitoramento:</strong>
              <div style={{ fontSize: '14px', color: '#666', marginTop: '5px' }}>
                ‚Ä¢ Performance de Componentes
                <br />
                ‚Ä¢ Tempo de Resposta
                <br />‚Ä¢ Usabilidade Mobile
              </div>
            </div>
          </div>
        </div>
      </ReportSection>

      {/* Upgrade Premium Prompt */}
      <UpgradePrompt
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.4 }}
      >
        <h3>ü§ñ Quer An√°lises Mais Profundas?</h3>
        <p>Desbloqueie relat√≥rios avan√ßados com Intelig√™ncia Artificial que incluem:</p>
        <ul style={{ textAlign: 'left', maxWidth: '600px', margin: '15px auto' }}>
          <li>üîç An√°lise detalhada de padr√µes neurol√≥gicos</li>
          <li>üéØ Recomenda√ß√µes personalizadas baseadas em IA</li>
          <li>üìä Gr√°ficos interativos e visualiza√ß√µes avan√ßadas</li>
          <li>üß© Identifica√ß√£o de necessidades espec√≠ficas</li>
          <li>üìã Relat√≥rios para profissionais da sa√∫de</li>
          <li>üîÆ Previs√µes de desenvolvimento</li>
        </ul>
        <UpgradeButton onClick={() => alert('Funcionalidade em desenvolvimento!')}>
          üöÄ Upgrade para IA Premium
        </UpgradeButton>
      </UpgradePrompt>

      {/* Notas Importantes */}
      <div
        style={{ background: '#e9ecef', padding: '15px', borderRadius: '8px', marginTop: '20px' }}
      >
        <h4>üìù Notas Importantes:</h4>
        <ul style={{ color: '#6c757d', fontSize: '14px' }}>
          <li>Este relat√≥rio b√°sico fornece uma vis√£o geral dos dados coletados</li>
          <li>Para an√°lises mais precisas e recomenda√ß√µes personalizadas, considere o upgrade</li>
          <li>Todos os dados s√£o coletados de forma an√¥nima e segura</li>
          <li>
            O relat√≥rio √© baseado nos √∫ltimos {timeRange === '7d' ? '7 dias' : '30 dias'} de
            atividade
          </li>
        </ul>
      </div>
    </ReportContainer>
  )
}

export default BasicNeuropedagogicalReport
