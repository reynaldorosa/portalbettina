#!/bin/bash

# Script para gerar nginx.conf a partir do template usando vari√°veis de ambiente
# Portal Betina - Configura√ß√£o Din√¢mica do Nginx

set -e

echo "üîß Gerando configura√ß√£o do nginx a partir das vari√°veis de ambiente..."

# Carregar vari√°veis de ambiente do arquivo .env se existir
if [ -f .env ]; then
    export $(cat .env | grep -v '^#' | xargs)
fi

# Definir valores padr√£o se as vari√°veis n√£o estiverem definidas
export NGINX_WORKER_CONNECTIONS=${NGINX_WORKER_CONNECTIONS:-1024}
export NGINX_KEEPALIVE_TIMEOUT=${NGINX_KEEPALIVE_TIMEOUT:-65}
export NGINX_CLIENT_MAX_BODY_SIZE=${NGINX_CLIENT_MAX_BODY_SIZE:-10M}
export NGINX_PORT=${NGINX_PORT:-80}
export API_PORT=${API_PORT:-3000}
export DOMAIN_NAME=${DOMAIN_NAME:-localhost}
export NGINX_PROXY_READ_TIMEOUT=${NGINX_PROXY_READ_TIMEOUT:-300s}
export NGINX_PROXY_CONNECT_TIMEOUT=${NGINX_PROXY_CONNECT_TIMEOUT:-75s}
export NGINX_CACHE_EXPIRES_STATIC=${NGINX_CACHE_EXPIRES_STATIC:-1y}
export NGINX_CACHE_EXPIRES_MEDIA=${NGINX_CACHE_EXPIRES_MEDIA:-30d}

# Verificar se o template existe
if [ ! -f "nginx.conf.template" ]; then
    echo "‚ùå Erro: nginx.conf.template n√£o encontrado!"
    exit 1
fi

# Substituir vari√°veis no template e gerar nginx.conf
envsubst '${NGINX_WORKER_CONNECTIONS} ${NGINX_KEEPALIVE_TIMEOUT} ${NGINX_CLIENT_MAX_BODY_SIZE} ${NGINX_PORT} ${API_PORT} ${DOMAIN_NAME} ${NGINX_PROXY_READ_TIMEOUT} ${NGINX_PROXY_CONNECT_TIMEOUT} ${NGINX_CACHE_EXPIRES_STATIC} ${NGINX_CACHE_EXPIRES_MEDIA}' < nginx.conf.template > nginx.conf

echo "‚úÖ nginx.conf gerado com sucesso!"
echo "üìã Configura√ß√µes aplicadas:"
echo "   - Porta Nginx: ${NGINX_PORT}"
echo "   - Porta API: ${API_PORT}"
echo "   - Dom√≠nio: ${DOMAIN_NAME}"
echo "   - Worker Connections: ${NGINX_WORKER_CONNECTIONS}"
echo "   - Client Max Body Size: ${NGINX_CLIENT_MAX_BODY_SIZE}"
echo ""
echo "üöÄ Para aplicar as mudan√ßas, reinicie o container nginx:"
echo "   docker-compose restart nginx"
